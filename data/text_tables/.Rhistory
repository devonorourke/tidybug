theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_point() +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma) +
facet_wrap( ~ Library, ncol=4) +
geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000),
direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of normalized sequences", y="") +
theme_devon() +
theme(legend.position="top")
# create theme function for all plots
# theme function for custom plot style:
theme_devon <- function () {
theme_bw(base_size=12, base_family="Avenir") %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="transparent", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA)
)
}
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_point() +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma) +
facet_wrap( ~ Library, ncol=4) +
geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000),
direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of normalized sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_point() +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma) +
facet_wrap( ~ Library, ncol=4, scales = "free_x") +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000),
direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_point() +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma) +
facet_wrap( ~ Library, ncol=4, scales = "free_x") +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000),
#                 direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_point(alpha=0.4) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma) +
facet_wrap( ~ Library, ncol=4, scales = "free_x") +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000),
#                 direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_point(alpha=0.7) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma) +
facet_wrap( ~ Library, ncol=4, scales = "free_x") +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000),
#                 direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.2) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma) +
facet_wrap( ~ Library, ncol=4, scales = "free_x") +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000),
#                 direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma) +
facet_wrap( ~ Library, ncol=4, scales = "free_x") +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000),
#                 direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_wrap( ~ Library, ncol=4, scales = "free_x") +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="", caption="Distinct x-axis units per Library ") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_wrap( ~ Library, ncol=2) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="", caption="Distinct x-axis units per Library ") +
theme_devon() +
theme(legend.position="top")
#####   #####   ##### unused figure alert!  #####   #####   #####
## we might want to illustrate just how many "miss" sequences are in this dataset.. but I don't think this helps
library(ggridges)
ggplot(data = mock, aes(x = p_Reads, y = Library, fill=Type)) +
geom_density_ridges(
aes(point_fill = Type, point_shape = Type),
point_alpha = 1, alpha = 0.5,jittered_points = TRUE) +
scale_fill_manual(values = c("#8da0cb", "#fc8d62", "#66c2a5")) +
facet_wrap( ~ Method, nrow = 3) +
theme_devon() +
labs(title="", x="fraction of reads", y="") + theme(legend.position="top", legend.title = element_blank())
## import data and select mock samples:
df <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/text_tables/all.filtmethods.df.csv.gz")
head(df)
df %>% group_by(SeqID) %>% summarise(SumReads=sum(Reads))
Sample_filtered <- df %>% group_by(SeqID) %>% summarise(SumReads=sum(Reads)) %>% filter(SumReads >= 5000)
df.filt <- df %>% filter(SeqID %in% Sample_filtered$SeqID)
rm(df)
df.filt %>% group_by(HashID) %>% summarise(HashCounts=n()) %>% filter(HashCounts > 1)
Hash_filtered <- df.filt %>% group_by(HashID) %>% summarise(HashCounts=n()) %>% filter(HashCounts > 1)
df.filt <- df.filt %>% filter(HashID %in% Hash_filtered$HashID)
mock.filt <- df.filt %>% filter(SampleType == "mock")
mockExact <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.exactHits.txt", col_names = FALSE)
mockExact$Type <- "exact"
colnames(mockExact)[1] <- "HashID"
mockPartial <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.partialHits.txt", col_names = FALSE)
mockPartial$Type <- "partial"
colnames(mockPartial)[1] <- "HashID"
mockMiss <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.partialMisses.txt", col_names = FALSE)
mockMiss$Type <- "miss"
colnames(mockMiss)[1] <- "HashID"
mockHitTypes <- rbind(mockExact, mockPartial, mockMiss)
rm(mockExact, mockPartial, mockMiss, mocklist)
mock.filt <- merge(mock.filt, mockHitTypes)
head(mock)
head(mock.filt)
mock.filt$Labeler <- "filtered"
## import data and select mock samples:
df <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/text_tables/all.filtmethods.df.csv.gz")
mock <- df %>% filter(SampleType == "mock")
## generate filtered mock data
Sample_filtered <- df %>% group_by(SeqID) %>% summarise(SumReads=sum(Reads)) %>% filter(SumReads >= 5000) ## require at least 5000 reads per sample
df.filt <- df %>% filter(SeqID %in% Sample_filtered$SeqID)
rm(df)
Hash_filtered <- df.filt %>% group_by(HashID) %>% summarise(HashCounts=n()) %>% filter(HashCounts > 1)
df.filt <- df.filt %>% filter(HashID %in% Hash_filtered$HashID)
mock.filt <- df.filt %>% filter(SampleType == "mock")
## import mock matches (exact, partial, and misses)
mockExact <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.exactHits.txt", col_names = FALSE)
mockExact$Type <- "exact"
colnames(mockExact)[1] <- "HashID"
mockPartial <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.partialHits.txt", col_names = FALSE)
mockPartial$Type <- "partial"
colnames(mockPartial)[1] <- "HashID"
mockMiss <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.partialMisses.txt", col_names = FALSE)
mockMiss$Type <- "miss"
colnames(mockMiss)[1] <- "HashID"
mockHitTypes <- rbind(mockExact, mockPartial, mockMiss)
rm(mockExact, mockPartial, mockMiss)
## merge mockHitTypes $Type to mock object (by $HashID)
mock <- merge(mock, mockHitTypes)
mock.filt <- merge(mock.filt, mockHitTypes)
rm(mockHitTypes)
## add Labeler for faceting plots
mock$Labeler <- "unfiltered"
mock.filt$Labeler <- "filtered"
## merge together
mock.all <- rbind(mock, mock.filt)
rm(mock, mock.filt)
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_wrap(Labeler ~ Library, ncol=2) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_wrap(Labeler ~ Library, ncol=4) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_grid(Labeler ~ Library, ncol=4) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_grid(Labeler ~ Library) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
mock.all$Labeler <- factor(mock.all$Labeler,levels = c("unfiltered", "filtered"))
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_grid(Labeler ~ Library) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## reset the levels for plot
mock.all$Type <- factor(mock.all$Type,levels = c("exact", "partial", "miss"))
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_grid(Labeler ~ Library) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
head(mock.all)
## tiny summary of mock data, per Library, per filtering/not
mock.all %>% group_by(HashID, Library, Labeler, Type) %>% summarise(CountTypes=n())
## tiny summary of mock data, per Library, per filtering/not
mock.all %>% group_by(Library, Labeler, Type) %>% summarise(CountTypes=n())
## tiny summary of mock data, per Library, per filtering/not
mock_Sumry <- mock.all %>% group_by(Library, Labeler, Type) %>% summarise(CountTypes=n())
View(mock_Sumry)
## tiny summary of mock data, per Library, per filtering/not
mock_Sumry <- mock.all %>% group_by(Library, Method, Labeler, Type) %>% summarise(CountTypes=n())
LibSums <- df %>% group_by(Method, Library) %>% summarize(TrimSum=sum(Reads))
## read in data and calculate sum of reads per Library, per Method
df <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/text_tables/all.filtmethods.df.csv.gz")
LibSums <- df %>% group_by(Method, Library) %>% summarize(TrimSum=sum(Reads))
## add in raw read sums per library
## raw "Joined" values assigned above derived by exporting "$LIB".joind.seqs.qza and ..
## ..counting number of N/4 lines of all data. see "seqfilter.qfilt_example.sh" for details
## operations were: 1) qiime tools export --import-path "$LIB".joind.seqs.qza --output-path joind
## and  ...       : 2) cat ./joind/*.gz | zcat | awk '{s++}END{print s/4}'
LibSums$JoindReads <- ""
LibSums$JoindReads[LibSums$Library=="libA"] <- 14724385
LibSums$JoindReads[LibSums$Library=="libB"] <- 17071355
LibSums$JoindReads[LibSums$Library=="libC"] <- 14279338
LibSums$JoindReads[LibSums$Library=="libD"] <- 14171652
LibSums$JoindReads <- as.numeric(LibSums$JoindReads)
## calculate percent of reads retained per Library per Method
LibSums <- LibSums %>% mutate(ReadsRetained = TrimSum/JoindReads)
LibSums$Method <- factor(LibSums$Method,levels = c("vsearch", "dada2", "deblur"))
## plot
## save as fig1A; export at
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained)) +
geom_point(aes(shape=Library), size=3) +
#scale_shape_manual(values=c(15,16,17,18)) +
scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon()
## plot
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained)) +
geom_point(aes(shape=Library), size=3) +
#scale_shape_manual(values=c(15,16,17,18)) +
scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
View(LibSums)
## plot
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained)) +
geom_point(aes(shape=Library), size=3, alpha=0.6) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained)) +
geom_point(aes(shape=Library), size=3, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained)) +
geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained, label=Library)) +
geom_text_repel() +
geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained, label=Library)) +
geom_text_repel() +
geom_point() +
#geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained, label=Library)) +
geom_text_repel(vjust=1) +
geom_point() +
#geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = Method, y = ReadsRetained, label=Library)) +
geom_text_repel(vjust=1, nudge_y = 1) +
geom_point() +
#geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
coord_flip() +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = ReadsRetained, y = Method, label=Library)) +
geom_text_repel(vjust=1, nudge_y = 1) +
geom_point() +
#geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = ReadsRetained, y = Method, label=Library)) +
geom_text_repel(vjust=1, nudge_y = 0.4) +
geom_point() +
#geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = ReadsRetained, y = Method, label=Library)) +
geom_text_repel(vjust=1, nudge_y = 0.2) +
geom_point() +
#geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = ReadsRetained, y = Method, label=Library)) +
geom_text_repel(vjust=1, nudge_y = 0.2, segment.alpha = 0.2) +
geom_point() +
#geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
labs(title="", x="", y="fraction of retained sequences") +
theme_devon() + theme(legend.position = "top")
## plot
ggplot(data = LibSums, aes(x = ReadsRetained, y = Method, label=Library)) +
geom_text_repel(vjust=1, nudge_y = 0.2, segment.alpha = 0.2) +
geom_point() +
#geom_point(aes(shape=Library), size=4, alpha=1) +
scale_shape_manual(values=c(65,66,67,68)) +
#scale_shape_manual(values=c(0,1,2,5)) +
geom_line(aes(group = Method), color="gray50") +
labs(title="", y="", x="fraction of retained sequences") +
theme_devon()
df <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/text_tables/all.filtmethods.df.csv.gz")
mock <- df %>% filter(SampleType == "mock")
## generate filtered mock data
Sample_filtered <- df %>% group_by(SeqID) %>% summarise(SumReads=sum(Reads)) %>% filter(SumReads >= 5000) ## require at least 5000 reads per sample
df.filt <- df %>% filter(SeqID %in% Sample_filtered$SeqID)
rm(df)
Hash_filtered <- df.filt %>% group_by(HashID) %>% summarise(HashCounts=n()) %>% filter(HashCounts > 1)
df.filt <- df.filt %>% filter(HashID %in% Hash_filtered$HashID)
mock.filt <- df.filt %>% filter(SampleType == "mock")
## import mock matches (exact, partial, and misses)
mockExact <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.exactHits.txt", col_names = FALSE)
mockExact$Type <- "exact"
colnames(mockExact)[1] <- "HashID"
mockPartial <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.partialHits.txt", col_names = FALSE)
mockPartial$Type <- "partial"
colnames(mockPartial)[1] <- "HashID"
mockMiss <- read_csv("https://github.com/devonorourke/tidybug/raw/master/data/mock_community/mock.partialMisses.txt", col_names = FALSE)
mockMiss$Type <- "miss"
colnames(mockMiss)[1] <- "HashID"
mockHitTypes <- rbind(mockExact, mockPartial, mockMiss)
rm(mockExact, mockPartial, mockMiss)
## merge mockHitTypes $Type to mock object (by $HashID)
mock <- merge(mock, mockHitTypes)
mock.filt <- merge(mock.filt, mockHitTypes)
rm(mockHitTypes)
## add Labeler for faceting plots
mock$Labeler <- "unfiltered"
mock.filt$Labeler <- "filtered"
## merge together
mock.all <- rbind(mock, mock.filt)
rm(mock, mock.filt)
## generate 3 color palette:
pal3 <- viridis::inferno(3, begin = 0.15, end = 0.85)
## reset the levels for plot
mock.all$Type <- factor(mock.all$Type,levels = c("exact", "partial", "miss"))
mock.all$Library <- factor(mock.all$Library,levels = c("libA", "libB", "libC", "libD"))
mock.all$Labeler <- factor(mock.all$Labeler,levels = c("unfiltered", "filtered"))
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_grid(Labeler ~ Library) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
head(mock.all)
## tiny summary of mock data, per Library, per filtering/not
mock_Sumry <- mock.all %>% group_by(Library, Method, Labeler, Type) %>% summarise(CountTypes=n())
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_grid(Labeler ~ Library) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
# create theme function for all plots
# theme function for custom plot style:
theme_devon <- function () {
theme_bw(base_size=12, base_family="Avenir") %+replace%
theme(
panel.background  = element_blank(),
plot.background = element_rect(fill="transparent", colour=NA),
legend.background = element_rect(fill="transparent", colour=NA),
legend.key = element_rect(fill="transparent", colour=NA)
)
}
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.7, height = 0.1) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_grid(Labeler ~ Library) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
## save as fig2A; export at EXACTLY 1000x504... any resizing screws with label positions
ggplot(data = mock.all, aes(x = Reads, y = Method, color=Type, label = Alias)) +
geom_jitter(alpha=0.6, height = 0.2) +
scale_color_manual(values = pal3, name = "") +
scale_x_continuous(labels = comma, trans = "log2") +
facet_grid(Labeler ~ Library) +
#geom_text_repel(data = mock %>% filter(Type == "partial" & Reads > 2000), direction="x", size=3, vjust = 0, force = 3, nudge_y = 0.2, angle=45,segment.size = 0.2) +
labs(title="", x="number of sequences", y="") +
theme_devon() +
theme(legend.position="top")
